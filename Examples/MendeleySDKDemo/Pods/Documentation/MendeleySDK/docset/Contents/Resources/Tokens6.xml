<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MDLGroup.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MDLGroup</TokenIdentifier>
			<Abstract type="html">MDLGroup represents a group, as described by Mendeley.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setIdentifier:</TokenIdentifier>
			<Abstract type="html">The group identifier.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/identifier</TokenIdentifier>
			<Abstract type="html">The group identifier.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setName:</TokenIdentifier>
			<Abstract type="html">The group name.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/name</TokenIdentifier>
			<Abstract type="html">The group name.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setOwner:</TokenIdentifier>
			<Abstract type="html">The group owner.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLUser *owner</Declaration>
			
			
			<Anchor>//api/name/owner</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/owner</TokenIdentifier>
			<Abstract type="html">The group owner.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLUser *owner</Declaration>
			
			
			<Anchor>//api/name/owner</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setCategory:</TokenIdentifier>
			<Abstract type="html">The group category.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLCategory *category</Declaration>
			
			
			<Anchor>//api/name/category</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/category</TokenIdentifier>
			<Abstract type="html">The group category.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLCategory *category</Declaration>
			
			
			<Anchor>//api/name/category</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setMendeleyURL:</TokenIdentifier>
			<Abstract type="html">The group Mendeley URL.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSURL *mendeleyURL</Declaration>
			
			
			<Anchor>//api/name/mendeleyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/mendeleyURL</TokenIdentifier>
			<Abstract type="html">The group Mendeley URL.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSURL *mendeleyURL</Declaration>
			
			
			<Anchor>//api/name/mendeleyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setNumberOfDocuments:</TokenIdentifier>
			<Abstract type="html">The group number of documents.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfDocuments</Declaration>
			
			
			<Anchor>//api/name/numberOfDocuments</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/numberOfDocuments</TokenIdentifier>
			<Abstract type="html">The group number of documents.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfDocuments</Declaration>
			
			
			<Anchor>//api/name/numberOfDocuments</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setDocuments:</TokenIdentifier>
			<Abstract type="html">The group documents.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *documents</Declaration>
			
			
			<Anchor>//api/name/documents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/documents</TokenIdentifier>
			<Abstract type="html">The group documents.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *documents</Declaration>
			
			
			<Anchor>//api/name/documents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setNumberOfAdmins:</TokenIdentifier>
			<Abstract type="html">The group number of admins.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfAdmins</Declaration>
			
			
			<Anchor>//api/name/numberOfAdmins</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/numberOfAdmins</TokenIdentifier>
			<Abstract type="html">The group number of admins.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfAdmins</Declaration>
			
			
			<Anchor>//api/name/numberOfAdmins</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setAdmins:</TokenIdentifier>
			<Abstract type="html">The group admins.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *admins</Declaration>
			
			
			<Anchor>//api/name/admins</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/admins</TokenIdentifier>
			<Abstract type="html">The group admins.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *admins</Declaration>
			
			
			<Anchor>//api/name/admins</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setNumberOfMembers:</TokenIdentifier>
			<Abstract type="html">The group number of members.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfMembers</Declaration>
			
			
			<Anchor>//api/name/numberOfMembers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/numberOfMembers</TokenIdentifier>
			<Abstract type="html">The group number of members.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfMembers</Declaration>
			
			
			<Anchor>//api/name/numberOfMembers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setMembers:</TokenIdentifier>
			<Abstract type="html">The group members.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *members</Declaration>
			
			
			<Anchor>//api/name/members</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/members</TokenIdentifier>
			<Abstract type="html">The group members.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *members</Declaration>
			
			
			<Anchor>//api/name/members</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setNumberOfFollowers:</TokenIdentifier>
			<Abstract type="html">The group number of followers.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfFollowers</Declaration>
			
			
			<Anchor>//api/name/numberOfFollowers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/numberOfFollowers</TokenIdentifier>
			<Abstract type="html">The group number of followers.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfFollowers</Declaration>
			
			
			<Anchor>//api/name/numberOfFollowers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setFollowers:</TokenIdentifier>
			<Abstract type="html">The group followers.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *followers</Declaration>
			
			
			<Anchor>//api/name/followers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/followers</TokenIdentifier>
			<Abstract type="html">The group followers.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *followers</Declaration>
			
			
			<Anchor>//api/name/followers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/setType:</TokenIdentifier>
			<Abstract type="html">The group type (can be ‘private’, ‘invite’, or ‘open’)</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) MDLGroupType type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLGroup/type</TokenIdentifier>
			<Abstract type="html">The group type (can be ‘private’, ‘invite’, or ‘open’)</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) MDLGroupType type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLGroup/createGroupWithName:type:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates a MDLGroup and sends an API creation request using the shared client.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>+ (MDLGroup *)createGroupWithName:(NSString *)name type:(MDLGroupType)type success:(void ( ^ ) ( MDLGroup *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the group.</Abstract>
				</Parameter><Parameter>
					<Name>type</Name>
					<Abstract type="html">The type of the group.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the created MDLGroup with its newly assigned group identifier.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly-initialized group, with group identifier = nil.</Abstract></ReturnValue>
			<Anchor>//api/name/createGroupWithName:type:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLGroup/fetchTopGroupsInPublicLibraryForCategory:atPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a public group overview API request using the shared client and fetches the response as an array of MDLGroup.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchTopGroupsInPublicLibraryForCategory:(NSString *)categoryIdentifier atPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>categoryIdentifier</Name>
					<Abstract type="html">The identifier of the category.</Abstract>
				</Parameter><Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page. Maximum is 1000.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLGroup objects, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchTopGroupsInPublicLibraryForCategory:atPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLGroup/fetchGroupsInUserLibrarySuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a user library groups API request using the shared client and fetches the response as an array of MDLGroup.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchGroupsInUserLibrarySuccess:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLGroup objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchGroupsInUserLibrarySuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/fetchDetailsSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a public groups details API request for the current document using the shared client.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)fetchDetailsSuccess:(void ( ^ ) ( MDLGroup *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the current group with its newly assigned details.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchDetailsSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/fetchPeopleSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a groups people API request for the current document using the shared client.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)fetchPeopleSuccess:(void ( ^ ) ( MDLGroup *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the current group with its newly assigned people.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchPeopleSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/fetchDocumentsAtPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a groups documents API request for the current document using the shared client.</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)fetchDocumentsAtPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchDocumentsAtPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/deleteSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a delete group API request using the shared client (you need to be a owner of the group).</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)deleteSuccess:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/leaveSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a leave group API request using the shared client (you need to be an administrator or a member of the group).</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)leaveSuccess:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/leaveSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLGroup/unfollowSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a unfollow group API request using the shared client (you need to be a follower of the group).</Abstract>
			<DeclaredIn>MDLGroup.h</DeclaredIn>			
			
			<Declaration>- (void)unfollowSuccess:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unfollowSuccess:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>