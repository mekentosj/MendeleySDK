<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MDLDocument.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MDLDocument</TokenIdentifier>
			<Abstract type="html">MDLDocument represents a userâ€™s document, as described by Mendeley.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setIdentifier:</TokenIdentifier>
			<Abstract type="html">The document identifier, as generated by Mendeley.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/identifier</TokenIdentifier>
			<Abstract type="html">The document identifier, as generated by Mendeley.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setDOI:</TokenIdentifier>
			<Abstract type="html">The document DOI (Digital Object Identifier).</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *DOI</Declaration>
			
			
			<Anchor>//api/name/DOI</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/DOI</TokenIdentifier>
			<Abstract type="html">The document DOI (Digital Object Identifier).</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *DOI</Declaration>
			
			
			<Anchor>//api/name/DOI</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setType:</TokenIdentifier>
			<Abstract type="html">The type of the document. This is @&quot;Generic&quot; by default.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/type</TokenIdentifier>
			<Abstract type="html">The type of the document. This is @&quot;Generic&quot; by default.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setTitle:</TokenIdentifier>
			<Abstract type="html">The title of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/title</TokenIdentifier>
			<Abstract type="html">The title of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setAbstract:</TokenIdentifier>
			<Abstract type="html">The abstract of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *abstract</Declaration>
			
			
			<Anchor>//api/name/abstract</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/abstract</TokenIdentifier>
			<Abstract type="html">The abstract of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *abstract</Declaration>
			
			
			<Anchor>//api/name/abstract</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setMendeleyURL:</TokenIdentifier>
			<Abstract type="html">The Mendeley URL of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSURL *mendeleyURL</Declaration>
			
			
			<Anchor>//api/name/mendeleyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/mendeleyURL</TokenIdentifier>
			<Abstract type="html">The Mendeley URL of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSURL *mendeleyURL</Declaration>
			
			
			<Anchor>//api/name/mendeleyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setAuthors:</TokenIdentifier>
			<Abstract type="html">The authors of the document stored as MDLAuthor.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *authors</Declaration>
			
			
			<Anchor>//api/name/authors</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/authors</TokenIdentifier>
			<Abstract type="html">The authors of the document stored as MDLAuthor.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *authors</Declaration>
			
			
			<Anchor>//api/name/authors</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setPublication:</TokenIdentifier>
			<Abstract type="html">The publication of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLPublication *publication</Declaration>
			
			
			<Anchor>//api/name/publication</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/publication</TokenIdentifier>
			<Abstract type="html">The publication of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLPublication *publication</Declaration>
			
			
			<Anchor>//api/name/publication</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setYear:</TokenIdentifier>
			<Abstract type="html">The year of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *year</Declaration>
			
			
			<Anchor>//api/name/year</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/year</TokenIdentifier>
			<Abstract type="html">The year of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *year</Declaration>
			
			
			<Anchor>//api/name/year</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setFiles:</TokenIdentifier>
			<Abstract type="html">The files of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *files</Declaration>
			
			
			<Anchor>//api/name/files</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/files</TokenIdentifier>
			<Abstract type="html">The files of the document.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *files</Declaration>
			
			
			<Anchor>//api/name/files</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setGroup:</TokenIdentifier>
			<Abstract type="html">The group of the document, if it belongs to one.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLGroup *group</Declaration>
			
			
			<Anchor>//api/name/group</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/group</TokenIdentifier>
			<Abstract type="html">The group of the document, if it belongs to one.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) MDLGroup *group</Declaration>
			
			
			<Anchor>//api/name/group</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/setIsInUserLibrary:</TokenIdentifier>
			<Abstract type="html">A Boolean value that corresponds to whether the document is in the user library.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL isInUserLibrary</Declaration>
			
			
			<Anchor>//api/name/isInUserLibrary</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLDocument/isInUserLibrary</TokenIdentifier>
			<Abstract type="html">A Boolean value that corresponds to whether the document is in the user library.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL isInUserLibrary</Declaration>
			
			
			<Anchor>//api/name/isInUserLibrary</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/createDocumentWithTitle:parameters:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates a MDLDocument and sends an API creation request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (MDLDocument *)createDocumentWithTitle:(NSString *)title parameters:(NSDictionary *)parameters success:(void ( ^ ) ( MDLDocument *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The title of the document.</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">Optional parameters of the document.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the created document with its newly assigned document identifier.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly-initialized document, with document identifier = nil.</Abstract></ReturnValue>
			<Anchor>//api/name/createDocumentWithTitle:parameters:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/searchWithTerms:atPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends an API search request with generic terms using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)searchWithTerms:(NSString *)terms atPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>terms</Name>
					<Abstract type="html">The terms for the search query</Abstract>
				</Parameter><Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects for the match, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/searchWithTerms:atPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/searchWithGenericTerms:authors:title:year:tags:atPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends an API search request with specific terms using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)searchWithGenericTerms:(NSString *)genericTerms authors:(NSString *)authors title:(NSString *)title year:(NSNumber *)year tags:(NSString *)tags atPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>genericTerms</Name>
					<Abstract type="html">The terms for the search query</Abstract>
				</Parameter><Parameter>
					<Name>authors</Name>
					<Abstract type="html">The authors for the search query</Abstract>
				</Parameter><Parameter>
					<Name>title</Name>
					<Abstract type="html">The title for the search query</Abstract>
				</Parameter><Parameter>
					<Name>year</Name>
					<Abstract type="html">The year for the search query</Abstract>
				</Parameter><Parameter>
					<Name>tags</Name>
					<Abstract type="html">The tags for the search query</Abstract>
				</Parameter><Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects for the match, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/searchWithGenericTerms:authors:title:year:tags:atPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/searchTagged:category:subcategory:atPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a search tagged API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)searchTagged:(NSString *)tag category:(MDLCategory *)category subcategory:(MDLSubcategory *)subcategory atPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>tag</Name>
					<Abstract type="html">The tags for the search query</Abstract>
				</Parameter><Parameter>
					<Name>category</Name>
					<Abstract type="html">The category for the search query</Abstract>
				</Parameter><Parameter>
					<Name>subcategory</Name>
					<Abstract type="html">The subcategory for the search query</Abstract>
				</Parameter><Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects for the match, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/searchTagged:category:subcategory:atPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/searchAuthoredWithName:year:atPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a search authored API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)searchAuthoredWithName:(NSString *)name year:(NSNumber *)year atPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the author for the search query</Abstract>
				</Parameter><Parameter>
					<Name>year</Name>
					<Abstract type="html">The year for the search query</Abstract>
				</Parameter><Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects for the match, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/searchAuthoredWithName:year:atPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/fetchTopDocumentsInPublicLibraryForCategory:upAndComing:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a top documents (papers) API request using the shared client and fetches the response as an array of MDLDocument.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchTopDocumentsInPublicLibraryForCategory:(NSString *)categoryIdentifier upAndComing:(BOOL)upAndComing success:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>categoryIdentifier</Name>
					<Abstract type="html">If not nil, the identifier of the category, otherwise across all categories.</Abstract>
				</Parameter><Parameter>
					<Name>upAndComing</Name>
					<Abstract type="html">If true, results apply to â€˜trendingâ€™ documents.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLDocument objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchTopDocumentsInPublicLibraryForCategory:upAndComing:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/fetchDocumentsInUserLibraryAtPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a user library API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchDocumentsInUserLibraryAtPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchDocumentsInUserLibraryAtPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLDocument/fetchAuthoredDocumentsInUserLibraryAtPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a user authored API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchAuthoredDocumentsInUserLibraryAtPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchAuthoredDocumentsInUserLibraryAtPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/uploadFileAtURL:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends an API upload request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>- (void)uploadFileAtURL:(NSURL *)fileURL success:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The local URL for the file to upload.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/uploadFileAtURL:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/fetchDetailsSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends an API details request for the current document using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>- (void)fetchDetailsSuccess:(void ( ^ ) ( MDLDocument *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the current document with its newly assigned details.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchDetailsSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/fetchRelatedDocumentsAtPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a related documents API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>- (void)fetchRelatedDocumentsAtPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLDocument objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchRelatedDocumentsAtPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLDocument/deleteSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a delete document API request using the shared client.</Abstract>
			<DeclaredIn>MDLDocument.h</DeclaredIn>			
			
			<Declaration>- (void)deleteSuccess:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLDocument objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSuccess:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>