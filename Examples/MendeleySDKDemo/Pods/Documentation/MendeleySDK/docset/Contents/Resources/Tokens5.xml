<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MDLFolder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MDLFolder</TokenIdentifier>
			<Abstract type="html">MDLFolder represents a folder, as described by Mendeley.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setIdentifier:</TokenIdentifier>
			<Abstract type="html">The folder identifier.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/identifier</TokenIdentifier>
			<Abstract type="html">The folder identifier.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setName:</TokenIdentifier>
			<Abstract type="html">The folder name.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/name</TokenIdentifier>
			<Abstract type="html">The folder name.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setParent:</TokenIdentifier>
			<Abstract type="html">The folder parent.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) MDLFolder *parent</Declaration>
			
			
			<Anchor>//api/name/parent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/parent</TokenIdentifier>
			<Abstract type="html">The folder parent.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) MDLFolder *parent</Declaration>
			
			
			<Anchor>//api/name/parent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setParentIdentifier:</TokenIdentifier>
			<Abstract type="html">The folder parent identifier.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *parentIdentifier</Declaration>
			
			
			<Anchor>//api/name/parentIdentifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/parentIdentifier</TokenIdentifier>
			<Abstract type="html">The folder parent identifier.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *parentIdentifier</Declaration>
			
			
			<Anchor>//api/name/parentIdentifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setSubfolders:</TokenIdentifier>
			<Abstract type="html">The folder subfolders.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *subfolders</Declaration>
			
			
			<Anchor>//api/name/subfolders</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/subfolders</TokenIdentifier>
			<Abstract type="html">The folder subfolders.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *subfolders</Declaration>
			
			
			<Anchor>//api/name/subfolders</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setNumberOfDocmuents:</TokenIdentifier>
			<Abstract type="html">The folder number of documents.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfDocmuents</Declaration>
			
			
			<Anchor>//api/name/numberOfDocmuents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/numberOfDocmuents</TokenIdentifier>
			<Abstract type="html">The folder number of documents.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSNumber *numberOfDocmuents</Declaration>
			
			
			<Anchor>//api/name/numberOfDocmuents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/setDocuments:</TokenIdentifier>
			<Abstract type="html">The folder documents.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *documents</Declaration>
			
			
			<Anchor>//api/name/documents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLFolder/documents</TokenIdentifier>
			<Abstract type="html">The folder documents.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSArray *documents</Declaration>
			
			
			<Anchor>//api/name/documents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLFolder/createFolderWithName:parent:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates a MDLFolder and sends an API creation request using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>+ (MDLFolder *)createFolderWithName:(NSString *)name parent:(MDLFolder *)parent success:(void ( ^ ) ( MDLFolder *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the folder.</Abstract>
				</Parameter><Parameter>
					<Name>parent</Name>
					<Abstract type="html">The parent folder. If parent = nil, the folder is created at the root level.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: the created MDLFolder with its newly assigned folder identifier.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly-initialized folder, with folder identifier = nil.</Abstract></ReturnValue>
			<Anchor>//api/name/createFolderWithName:parent:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLFolder/fetchFoldersInUserLibrarySuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a folder API request using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchFoldersInUserLibrarySuccess:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLFolder objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchFoldersInUserLibrarySuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/fetchDocumentsAtPage:count:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a folders documents API request for the current document using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>- (void)fetchDocumentsAtPage:(NSUInteger)pageIndex count:(NSUInteger)count success:(void ( ^ ) ( NSArray *, NSUInteger , NSUInteger , NSUInteger , NSUInteger ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>pageIndex</Name>
					<Abstract type="html">The page index. O is first page.</Abstract>
				</Parameter><Parameter>
					<Name>count</Name>
					<Abstract type="html">The number of items returned per page.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes five arguments: an array of MDLDocument objects, the total number of results, the total number of pages, the index of the current page, and the number of items per page.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchDocumentsAtPage:count:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/addDocument:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a add document to folder API request using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>- (void)addDocument:(MDLDocument *)document success:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>document</Name>
					<Abstract type="html">A MDLDocmuent to add to the current folder.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addDocument:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/deleteSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a delete folder API request using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>- (void)deleteSuccess:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLFolder/removeDocument:success:failure:</TokenIdentifier>
			<Abstract type="html">Sends a delete document from folder API request using the shared client.</Abstract>
			<DeclaredIn>MDLFolder.h</DeclaredIn>			
			
			<Declaration>- (void)removeDocument:(MDLDocument *)document success:(void ( ^ ) ( ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>document</Name>
					<Abstract type="html">The document to remove.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes no argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeDocument:success:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>