<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MDLCategory.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MDLCategory</TokenIdentifier>
			<Abstract type="html">MDLCategory represents a category, as described by Mendeley.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLCategory/setIdentifier:</TokenIdentifier>
			<Abstract type="html">The category identifier, as generated by Mendeley.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLCategory/identifier</TokenIdentifier>
			<Abstract type="html">The category identifier, as generated by Mendeley.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLCategory/setName:</TokenIdentifier>
			<Abstract type="html">The category name.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLCategory/name</TokenIdentifier>
			<Abstract type="html">The category name.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLCategory/setSlug:</TokenIdentifier>
			<Abstract type="html">The category slug.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *slug</Declaration>
			
			
			<Anchor>//api/name/slug</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLCategory/slug</TokenIdentifier>
			<Abstract type="html">The category slug.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>@property (copy, nonatomic) NSString *slug</Declaration>
			
			
			<Anchor>//api/name/slug</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLCategory/categoryWithIdentifier:name:slug:</TokenIdentifier>
			<Abstract type="html">Creates a MDLCategory and initializes its identifier, name, and slug properties.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>+ (MDLCategory *)categoryWithIdentifier:(NSString *)identifier name:(NSString *)name slug:(NSString *)slug</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">The identifier of the category.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the category.</Abstract>
				</Parameter><Parameter>
					<Name>slug</Name>
					<Abstract type="html">The slug of the category.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly-initialized category.</Abstract></ReturnValue>
			<Anchor>//api/name/categoryWithIdentifier:name:slug:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLCategory/fetchCategoriesSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a categories API request using the shared client and fetches the response as an array of MDLCategory.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchCategoriesSuccess:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLCategory objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchCategoriesSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLCategory/fetchSubcategoriesSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a subcategories API request using the shared client and fetches the response as an array of MDLSubcategory.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>- (void)fetchSubcategoriesSuccess:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLSubcategory objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchSubcategoriesSuccess:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLCategory/fetchLastTagsInPublicLibrarySuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sends a last tags API request using the shared client and fetches the response as an array of MDLTag.</Abstract>
			<DeclaredIn>MDLCategory.h</DeclaredIn>			
			
			<Declaration>- (void)fetchLastTagsInPublicLibrarySuccess:(void ( ^ ) ( NSArray *))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes one argument: an array of MDLTag objects.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchLastTagsInPublicLibrarySuccess:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>