<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MDLMendeleyAPIClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MDLMendeleyAPIClient</TokenIdentifier>
			<Abstract type="html">MDLMendeleyAPIClient is an HTTP client preconfigured for accessing Mendeley Open API.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/setAutomaticAuthenticationEnabled:</TokenIdentifier>
			<Abstract type="html">When enabled, automatic authentication launch the authentication process upon receiving network responses with status code = 401. This is YES by default.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>@property (getter=isAutomaticAuthenticationEnabled) BOOL automaticAuthenticationEnabled</Declaration>
			
			
			<Anchor>//api/name/automaticAuthenticationEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLMendeleyAPIClient/automaticAuthenticationEnabled</TokenIdentifier>
			<Abstract type="html">When enabled, automatic authentication launch the authentication process upon receiving network responses with status code = 401. This is YES by default.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>@property (getter=isAutomaticAuthenticationEnabled) BOOL automaticAuthenticationEnabled</Declaration>
			
			
			<Anchor>//api/name/automaticAuthenticationEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/setRateLimitRemainingForLatestRequest:</TokenIdentifier>
			<Abstract type="html">Number of calls you can still do within the next hour for the latest request. This is NSNotFound by default.
Note that the default rate limit for calls varies depending on the method being requested.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic) NSInteger rateLimitRemainingForLatestRequest</Declaration>
			
			
			<Anchor>//api/name/rateLimitRemainingForLatestRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MDLMendeleyAPIClient/rateLimitRemainingForLatestRequest</TokenIdentifier>
			<Abstract type="html">Number of calls you can still do within the next hour for the latest request. This is NSNotFound by default.
Note that the default rate limit for calls varies depending on the method being requested.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic) NSInteger rateLimitRemainingForLatestRequest</Declaration>
			
			
			<Anchor>//api/name/rateLimitRemainingForLatestRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MDLMendeleyAPIClient/sharedClient</TokenIdentifier>
			<Abstract type="html">Creates and initializes if needed a singleton instance of a MDLMendeleyAPIClient object configured with Mendeley Open API URL.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>+ (MDLMendeleyAPIClient *)sharedClient</Declaration>
			
			<ReturnValue><Abstract type="html">The newly-initialized client</Abstract></ReturnValue>
			<Anchor>//api/name/sharedClient</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/getPath:requiresAuthentication:parameters:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates an AFHTTPRequestOperation with a GET request, and enqueues it to the HTTP client’s operation queue.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>- (void)getPath:(NSString *)path requiresAuthentication:(BOOL)requiresAuthentication parameters:(NSDictionary *)parameters success:(void ( ^ ) ( AFHTTPRequestOperation *, id ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to be appended to the HTTP client’s base URL and used as the request URL.</Abstract>
				</Parameter><Parameter>
					<Name>requiresAuthentication</Name>
					<Abstract type="html">A boolean value that corresponds to whether the resource requires authentication</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">The parameters of the request.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes two arguments: the created request operation and the deserialized JSON object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getPath:requiresAuthentication:parameters:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/getPath:requiresAuthentication:parameters:outputStreamToFileAtPath:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates an AFHTTPRequestOperation with a GET request, setup outstream to a file, and enqueues it to the HTTP client’s operation queue.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>- (void)getPath:(NSString *)path requiresAuthentication:(BOOL)requiresAuthentication parameters:(NSDictionary *)parameters outputStreamToFileAtPath:(NSString *)filePath success:(void ( ^ ) ( AFHTTPRequestOperation *, id ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to be appended to the HTTP client’s base URL and used as the request URL.</Abstract>
				</Parameter><Parameter>
					<Name>requiresAuthentication</Name>
					<Abstract type="html">A boolean value that corresponds to whether the resource requires authentication.</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">The parameters of the request.</Abstract>
				</Parameter><Parameter>
					<Name>filePath</Name>
					<Abstract type="html">The path to the file output stream to.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes two arguments: the created request operation and the deserialized JSON object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getPath:requiresAuthentication:parameters:outputStreamToFileAtPath:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/postPath:bodyKey:bodyContent:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates an AFHTTPRequestOperation with a POST request, and enqueues it to the HTTP client’s operation queue.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>- (void)postPath:(NSString *)path bodyKey:(NSString *)bodyKey bodyContent:(id)bodyContent success:(void ( ^ ) ( AFHTTPRequestOperation *, id ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to be appended to the HTTP client’s base URL and used as the request URL.</Abstract>
				</Parameter><Parameter>
					<Name>bodyKey</Name>
					<Abstract type="html">The key for the object to be encoded and set in the request HTTP body.</Abstract>
				</Parameter><Parameter>
					<Name>bodyContent</Name>
					<Abstract type="html">The object to be encoded and set in the request HTTP body.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes two arguments: the created request operation and the deserialized JSON object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/postPath:bodyKey:bodyContent:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/deletePath:parameters:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates an AFHTTPRequestOperation with a DELETE request, and enqueues it to the HTTP client’s operation queue.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>- (void)deletePath:(NSString *)path parameters:(NSDictionary *)parameters success:(void ( ^ ) ( AFHTTPRequestOperation *, id ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to be appended to the HTTP client’s base URL and used as the request URL.</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">The parameters of the request.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes two arguments: the created request operation and the deserialized JSON object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deletePath:parameters:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MDLMendeleyAPIClient/putPath:fileAtURL:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates an AFHTTPRequestOperation with a PUT request, and enqueues it to the HTTP client’s operation queue.</Abstract>
			<DeclaredIn>MDLMendeleyAPIClient.h</DeclaredIn>			
			
			<Declaration>- (void)putPath:(NSString *)path fileAtURL:(NSURL *)fileURL success:(void ( ^ ) ( AFHTTPRequestOperation *, id ))success failure:(void ( ^ ) ( NSError *))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to be appended to the HTTP client’s base URL and used as the request URL.</Abstract>
				</Parameter><Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The local URL for the object to be encoded and set in the request HTTP body.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes successfully. This block has no return value and takes two arguments: the created request operation and the object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. This block has no return value and takes one argument: the NSError object describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putPath:fileAtURL:success:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>